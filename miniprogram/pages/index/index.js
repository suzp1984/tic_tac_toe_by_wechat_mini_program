"use strict";
var app = getApp();
Page({
    data: {
        motto: 'Hello World',
        userInfo: {},
        hasUserInfo: false,
        canIUse: wx.canIUse('button.open-type.getUserInfo'),
        isNextPlayerX: true,
        gameTitle: "Next Player X",
        isResetEnabled: false,
        winner: "",
        squareClasses: [
            "", "", "",
            "", "", "",
            "", "", ""
        ],
    },
    bindViewTap: function () {
        wx.navigateTo({
            url: '../logs/logs',
        });
    },
    onLoad: function () {
        var _this = this;
        if (app.globalData.userInfo) {
            this.setData({
                userInfo: app.globalData.userInfo,
                hasUserInfo: true,
            });
        }
        else if (this.data.canIUse) {
            app.userInfoReadyCallback = function (res) {
                _this.setData({
                    userInfo: res.userInfo,
                    hasUserInfo: true,
                });
            };
        }
        else {
            wx.getUserInfo({
                success: function (res) {
                    app.globalData.userInfo = res.userInfo;
                    _this.setData({
                        userInfo: res.userInfo,
                        hasUserInfo: true,
                    });
                },
            });
        }
    },
    getUserInfo: function (e) {
        console.log(e);
        app.globalData.userInfo = e.detail.userInfo;
        this.setData({
            userInfo: e.detail.userInfo,
            hasUserInfo: true,
        });
    },
    onTap: function (e) {
        console.log(e);
        console.log('on tap square ' + e.currentTarget.dataset['index']);
        var _index = e.currentTarget.dataset['index'];
        var _squareClass = this.data.squareClasses[_index];
        if (_squareClass != "") {
            console.log('current square already occupied by ' + _squareClass);
            return;
        }
        if (this.data.winner != '') {
            console.log('this round already has winner ' + this.data.winner);
            return;
        }
        var _isNextPlayerX = this.data.isNextPlayerX;
        var _squareClasses = this.data.squareClasses;
        _squareClasses[_index] = _isNextPlayerX ? 'player-x' : 'player-o';
        this.setData({
            isNextPlayerX: !_isNextPlayerX,
            gameTitle: !_isNextPlayerX ? "Next Player X" : "Next Player O",
            squareClasses: _squareClasses
        });
        this.calculateWinner();
    },
    reset: function () {
        this.setData({
            gameTitle: this.data.isNextPlayerX ? "Next Player X" : "Next Player O",
            isResetEnabled: false,
            winner: "",
            squareClasses: [
                "", "", "",
                "", "", "",
                "", "", ""
            ],
        });
    },
    calculateWinner: function () {
        var lines = [
            [0, 1, 2],
            [3, 4, 5],
            [6, 7, 8],
            [0, 3, 6],
            [1, 4, 7],
            [2, 5, 8],
            [0, 4, 8],
            [2, 4, 6]
        ];
        for (var i = 0; i < lines.length; i++) {
            var _a = lines[i], a = _a[0], b = _a[1], c = _a[2];
            if (this.data.squareClasses[a] != "" &&
                this.data.squareClasses[a] === this.data.squareClasses[b] &&
                this.data.squareClasses[b] === this.data.squareClasses[c]) {
                var _winner = this.data.squareClasses[a] === 'player-x' ? 'X' : 'O';
                this.setData({
                    isResetEnabled: true,
                    winner: _winner,
                    gameTitle: _winner === 'X' ? 'Winner is Player X' : 'Winner is Player O'
                });
                wx.showToast({
                    title: _winner === 'X' ? 'Player X Win' : 'Player O Win',
                    icon: 'none',
                    duration: 2000,
                });
                return;
            }
        }
        for (var i = 0; i < this.data.squareClasses.length; i++) {
            if (this.data.squareClasses[i] === "") {
                return;
            }
        }
        this.setData({
            isResetEnabled: true,
            gameTitle: "No Winner",
        });
        wx.showToast({
            title: 'No Winner',
            icon: 'none',
            duration: 2000,
        });
    }
});
//# sourceMappingURL=data:application/json;base64,